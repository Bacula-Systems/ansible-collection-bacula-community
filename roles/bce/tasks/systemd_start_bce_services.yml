---
- name: start bacula-dir service (for Debian/Ubuntu, daemons must start automatically after installation)
  systemd:
    name: bacula-dir
    state: started
  register: dir_started
- debug: msg="Director hadn't started automatically! For Debian/Ubuntu, \
              Bacula daemons should start automatically. For CentOS/RedHat, \
              Bacula Daemons must be started manually."
  when: dir_started.changed == true
- debug: msg="Director started automatically as expected."
  when: dir_started.changed == false
- name: bacula-dir service status
  command: "systemctl status bacula-dir"
  register: bacula_dir_status
- debug: msg="{{ bacula_dir_status.stdout.split('\n') }}"
- debug: msg="{{ bacula_dir_status.stderr.split('\n') }}"
- name: start bacula-fd service (for Debian/Ubuntu, daemons must start automatically after installation)
  systemd:
    name: bacula-fd
    state: started
  register: fd_started
- debug: msg="File Daemon hadn't started automatically! For Debian/Ubuntu, \
              Bacula daemons should start automatically. For CentOS/RedHat, \
              Bacula Daemons must be started manually."
  when: fd_started.changed == true
- debug: msg="File Daemon started automatically as expected."
  when: fd_started.changed == false
- name: bacula-fd service status
  command: "systemctl status bacula-fd"
  register: bacula_fd_status
- debug: msg="{{ bacula_fd_status.stdout.split('\n') }}"
- debug: msg="{{ bacula_fd_status.stderr.split('\n') }}"
- name: start bacula-sd service (for Debian/Ubuntu,  daemons must start automatically after installation)
  systemd:
    name: bacula-sd
    state: started
  register: sd_started
- debug: msg="Storage Daemon hadn't started automatically! For Debian/Ubuntu, \
              Bacula daemons should start automatically. For CentOS/RedHat, \
              Bacula Daemons must be started manually."
  when: sd_started.changed == true
- debug: msg="Storage Daemon started automatically as expected."
  when: sd_started.changed == false
- name: bacula-sd service status
  command: "systemctl status bacula-sd"
  register: bacula_sd_status
- debug: msg="{{ bacula_sd_status.stdout.split('\n') }}"
- debug: msg="{{ bacula_sd_status.stderr.split('\n') }}"
